<!--! All Items -->
<section id="items" class="items my-8 px-12 sm:px-5 md:px-20">
    <h1 class="font-bold text-3xl w-fit">Food Menu <i class="ri-booklet-line"></i></h1>

    <!-- All Items -->
    <div class="items my-3">
        <!-- Add filter buttons with Tailwind CSS classes -->
        <div class="filter-buttons flex md:justify-center overflow-x-auto whitespace-nowrap my-8 space-x-3 sm:space-x-10">
            <button class="filter-btn text-lg font-semibold px-4 py-2 bg-gray-200 border border-gray-300 rounded-full hover:bg-green-500 hover:border-green-600 hover:text-white focus:bg-green-500 focus:text-white transition-all duration-300" data-category="all">All</button>
            <button class="filter-btn text-lg font-semibold px-4 py-2 bg-gray-200 border border-gray-300 rounded-full hover:bg-green-500 hover:border-green-600 hover:text-white focus:bg-green-500 focus:text-white transition-all duration-300" data-category="pizza">Pizza</button>
            <button class="filter-btn text-lg font-semibold px-4 py-2 bg-gray-200 border border-gray-300 rounded-full hover:bg-green-500 hover:border-green-600 hover:text-white focus:bg-green-500 focus:text-white transition-all duration-300" data-category="burger">Burger</button>
            <button class="filter-btn text-lg font-semibold px-4 py-2 bg-gray-200 border border-gray-300 rounded-full hover:bg-green-500 hover:border-green-600 hover:text-white focus:bg-green-500 focus:text-white transition-all duration-300" data-category="healthy">Healthy</button>
            <button class="filter-btn text-lg font-semibold px-4 py-2 bg-gray-200 border border-gray-300 rounded-full hover:bg-green-500 hover:border-green-600 hover:text-white focus:bg-green-500 focus:text-white transition-all duration-300" data-category="drinks">Drinks</button>
        </div>
        
        <div class="grid gap-8 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
            <!-- Item card -->
            <% foodItems.forEach(function(item) { %>
                <div class="cursor-pointer item-card p-2 flex flex-col gap-2 border bg-gray-100 rounded-md hover:border-green-500 hover:bg-green-100 transition-all duration-300" data-category="<%= item.category %>">
                    <img loading="lazy" class="w-full h-64 rounded-md object-cover" src="../../img/items/<%= item.image %>" alt="">
    
                    <div class="text-center flex flex-col items-center">
                        <h2 class="font-bold text-xl"><%= item.name %></h2>
                        <div class="flex items-center justify-center gap-2">
                            <h4 class="font-semibold text-base">VEG</h4>
                            <img loading="lazy" src="../../img/veg.png" class="w-6" alt="">
                        </div>
                    </div>
    
                    <div class="flex items-center justify-around">
                        <span class="font-semibold text-lg">â‚¹ <%= item.price %></span>
                        <button item-data="<%= JSON.stringify(item) %>" class="add-to-cart flex items-center gap-1 font-semibold border-2 border-green-500 rounded-full py-1 px-4 hover:bg-green-500 text-green-500 hover:text-white transition-all duration-300">
                            <span>+</span>
                            <span>Add</span>
                        </button>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>
</section>

<!--! Script to Filter Menu Items -->
<!-- Script to Filter Menu Items -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const filterButtons = document.querySelectorAll('.filter-btn');
        const itemCards = document.querySelectorAll('.item-card');

        filterButtons.forEach(button => {
            button.addEventListener('click', function () {
                const category = this.dataset.category;

                itemCards.forEach(card => {
                    const cardCategory = card.dataset.category;

                    if (category === 'all' || cardCategory === category) {
                        card.classList.remove('hidden'); // Show the item card
                    } else {
                        card.classList.add('hidden'); // Hide the item card
                    }
                });
            });
        });
    });
</script>